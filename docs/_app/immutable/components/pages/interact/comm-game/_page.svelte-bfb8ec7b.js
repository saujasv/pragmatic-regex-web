import{S as ue,i as de,s as me,k as n,q as u,a as M,l as o,m as l,r as d,h as r,c as O,n as w,R as pe,b as ge,G as t,I as fe,B as q,H as be,o as we,w as ye,Q as xe,x as ve,y as _e,f as ke,t as Ee,z as Te}from"../../../../chunks/index-0e9e634d.js";import{g as ce}from"../../../../chunks/navigation-c15f7844.js";import{d as A}from"../../../../chunks/singletons-69107a7c.js";import{u as $e}from"../../../../chunks/store-b95407d5.js";/* empty css                                                                   */function Ie(g){let e,h,a,c,s,p,v,f,x,b,m,E,_,C,D,B,W,G,H,P,V,z,y,Y,R,N,Q,S,U,F,J,T,k,K,L,X;return{c(){e=n("div"),h=n("header"),a=n("a"),c=n("h1"),s=u("Communication games"),p=M(),v=n("div"),f=n("img"),b=M(),m=n("p"),E=u("The task of describing an intended regular expression using examples can be viewed as two-player game. In this game, one player – a "),_=n("b"),C=u("describer"),D=u(" (in green) – has a particular regular expression in mind. The describer must now communicate this regular expression to a "),B=n("b"),W=u("guesser"),G=u(" (in yellow) using only examples. The guesser must in turn guess which regular expression the describer might be referring to based only on the examples that the describer provides. The game ends when the guesser guesses the regular expression that the describer has in mind."),H=M(),P=n("p"),V=u("Some real-world situations can be viewed as instances of this communication game. One example is that of asking for help on an online forum such as StackOverflow. The person asking for help in this case is a describer. They have in mind a program that does something, and describe this in their post. Those who respond can be viewed as guessers. When the guesser successfully identifies a program that does what the describer had in mind, the interaction is said to be successful."),z=M(),y=n("p"),Y=u(`In this task, you will assume the role of 
        
        
        the describer.
        
        As a describer, you may only use examples to communicate a regular expression you are given. These examples will be shown to a model that will will assume the role of the guesser, and try to identify the regular expression you were trying to communicate. When you are a describer, try to provide examples that you think will be most helpful to the guesser. You will interact with `),R=n("b"),N=u("three"),Q=u(" different guessers, and at the end of the task you will be asked to "),S=n("b"),U=u("answer questions"),F=u(" about the guessers that you interacted with."),J=M(),T=n("div"),k=n("button"),K=u("Proceed to task"),this.h()},l(j){e=o(j,"DIV",{class:!0});var i=l(e);h=o(i,"HEADER",{class:!0});var Z=l(h);a=o(Z,"A",{href:!0,class:!0});var ee=l(a);c=o(ee,"H1",{});var te=l(c);s=d(te,"Communication games"),te.forEach(r),ee.forEach(r),Z.forEach(r),p=O(i),v=o(i,"DIV",{class:!0});var se=l(v);f=o(se,"IMG",{src:!0,alt:!0}),se.forEach(r),b=O(i),m=o(i,"P",{});var $=l(m);E=d($,"The task of describing an intended regular expression using examples can be viewed as two-player game. In this game, one player – a "),_=o($,"B",{});var ae=l(_);C=d(ae,"describer"),ae.forEach(r),D=d($," (in green) – has a particular regular expression in mind. The describer must now communicate this regular expression to a "),B=o($,"B",{});var re=l(B);W=d(re,"guesser"),re.forEach(r),G=d($," (in yellow) using only examples. The guesser must in turn guess which regular expression the describer might be referring to based only on the examples that the describer provides. The game ends when the guesser guesses the regular expression that the describer has in mind."),$.forEach(r),H=O(i),P=o(i,"P",{});var ne=l(P);V=d(ne,"Some real-world situations can be viewed as instances of this communication game. One example is that of asking for help on an online forum such as StackOverflow. The person asking for help in this case is a describer. They have in mind a program that does something, and describe this in their post. Those who respond can be viewed as guessers. When the guesser successfully identifies a program that does what the describer had in mind, the interaction is said to be successful."),ne.forEach(r),z=O(i),y=o(i,"P",{});var I=l(y);Y=d(I,`In this task, you will assume the role of 
        
        
        the describer.
        
        As a describer, you may only use examples to communicate a regular expression you are given. These examples will be shown to a model that will will assume the role of the guesser, and try to identify the regular expression you were trying to communicate. When you are a describer, try to provide examples that you think will be most helpful to the guesser. You will interact with `),R=o(I,"B",{});var oe=l(R);N=d(oe,"three"),oe.forEach(r),Q=d(I," different guessers, and at the end of the task you will be asked to "),S=o(I,"B",{});var ie=l(S);U=d(ie,"answer questions"),ie.forEach(r),F=d(I," about the guessers that you interacted with."),I.forEach(r),J=O(i),T=o(i,"DIV",{class:!0});var le=l(T);k=o(le,"BUTTON",{class:!0});var he=l(k);K=d(he,"Proceed to task"),he.forEach(r),le.forEach(r),i.forEach(r),this.h()},h(){w(a,"href",A),w(a,"class","d-flex align-items-center text-dark text-decoration-none"),w(h,"class","d-flex align-items-center pb-3 mb-5 border-bottom"),pe(f.src,x=`${A}/images/regex-comm-game.svg`)||w(f,"src",x),w(f,"alt",""),w(v,"class","text-center my-5"),w(k,"class","btn btn-primary"),w(T,"class","row-gx-1 py-5 float-right"),w(e,"class","col-lg-10 mx-auto p-3 py-md-5")},m(j,i){ge(j,e,i),t(e,h),t(h,a),t(a,c),t(c,s),t(e,p),t(e,v),t(v,f),t(e,b),t(e,m),t(m,E),t(m,_),t(_,C),t(m,D),t(m,B),t(B,W),t(m,G),t(e,H),t(e,P),t(P,V),t(e,z),t(e,y),t(y,Y),t(y,R),t(R,N),t(y,Q),t(y,S),t(S,U),t(y,F),t(e,J),t(e,T),t(T,k),t(k,K),L||(X=fe(k,"click",g[0]),L=!0)},p:q,i:q,o:q,d(j){j&&r(e),L=!1,X()}}}function Me(g,e){return g=Math.ceil(g),e=Math.floor(e),Math.floor(Math.random()*(e-g)+g)}function Oe(g,e,h){let a;be(g,$e,f=>h(9,a=f));let c="",s="";async function p(){a.length==0&&ce(`${A}/interact/login`);let f=await fetch("https://try-regex-default-rtdb.firebaseio.com/heldout-describe-pilot.json").then(_=>_.json()),x=new Object;for(var b in f)x[b]=f[b];let m=Me(0,Object.keys(x).length);console.log(m);let E=0;for(var b in x){if(E==m){s=b,c=x[b].program,console.log(b,x[b]),console.log(s,c);return}E+=1}}return we(p),[()=>ce(`${A}/interact/examples`)]}class Be extends ue{constructor(e){super(),de(this,e,Oe,Ie,me,{})}}function Pe(g){let e,h,a,c;return a=new Be({}),{c(){e=n("meta"),h=M(),ye(a.$$.fragment),this.h()},l(s){const p=xe("svelte-tap1z9",document.head);e=o(p,"META",{name:!0,content:!0}),p.forEach(r),h=O(s),ve(a.$$.fragment,s),this.h()},h(){document.title="Regex from Examples",w(e,"name","description"),w(e,"content","Regular expressions from examples")},m(s,p){t(document.head,e),ge(s,h,p),_e(a,s,p),c=!0},p:q,i(s){c||(ke(a.$$.fragment,s),c=!0)},o(s){Ee(a.$$.fragment,s),c=!1},d(s){r(e),s&&r(h),Te(a,s)}}}class Ce extends ue{constructor(e){super(),de(this,e,null,Pe,me,{})}}export{Ce as default};
